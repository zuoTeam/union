<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	">
	
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 普通类扫描 -->
	<context:component-scan base-package="com.zuo.union"/>
	
	<!-- 事务管理器扫描 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 配置数据源 -->
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${DRIVER}"/>
		<property name="url" value="${URL}"/>
		<property name="username" value="${USER}"/>
		<property name="password" value="${PASS}"/>
		
		<!-- 继续配置数据源连接池特性 -->
		 <!-- 连接池启动时的初始值 -->
		 <property name="initialSize" value="1"/>
		 <!-- 连接池的最大值 -->
		 <property name="maxActive" value="100"/>
		 <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		 <property name="maxIdle" value="5"/>
		 <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		 <property name="minIdle" value="1"/>
		 <!-- maxWait：超时等待时间以毫秒为单位 -->
		 <property name="maxWait" value="10000"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<!-- 往IOC容器中注入Mybatis的核心类 ——SqlSessionFactory,进而生成SqlSession-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		
		<!-- 直接加载Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:com/zuo/union/mapper/*Mapper.xml"/>
		
		<!-- 指定Mapper映射文件中使用的类名别名 -->
		<property name="typeAliasesPackage" value="com.zuo.union.domain,com.zuo.union.mapper"/>
		
	</bean>

	<!-- 扫描存储在相同包下的各种DAO模型接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="com.zuo.union.mapper" />
	</bean>
	
</beans>
