<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zuo.union.mapper.NewsMapper">
	
	<!-- 获取所有社区新闻的类别 -->
	<select id="getAllNewsType" resultMap="AllNewsTypeResultMap">
		select type_id,type_name from types t inner join functions f on t.func_id = f.func_id where f.func_id = 2
	</select>
	<!-- 字段映射 -->
	<resultMap type="Type" id="AllNewsTypeResultMap">
		<id property="typeId" column="type_id"/>
		<result property="typeName" column="type_name"/>
	</resultMap>
	
	<!-- 获取全部新闻 -->
	<select id="getAllNews" resultMap="AllNewsResultMap">
		SELECT
			news_id,
			news_title,
			news_desc,
			news_date,
			user_nickname,
			type_name
		FROM
			news
		LEFT JOIN USER ON news_author = user_id
		LEFT JOIN types ON news_type = types.type_id
		order by
			news_date desc
	</select>
	<resultMap type="News" id="AllNewsResultMap">
		<id property="newsId" column="news_id"/>
		<result property="newsTitle" column="news_title"/>
		<result property="newsDesc" column="news_desc"/>
		<result property="newsDate" column="news_date"/>
		
		<association property="publisher" javaType="User">
			<result property="userNickname" column="user_nickname"/>
		</association>
		
		<association property="type" javaType="Type">
			<result property="typeName" column="type_name"/>
		</association>
	</resultMap>
	
	<!-- 根据类型获取相应新闻 -->
	<select id="getNewsByType" parameterMap="byType" resultMap="AllNewsResultMap">
		SELECT
			news_id,
			news_title,
			news_desc,
			news_date,
			user_nickname,
			type_name
		FROM
			news
		LEFT JOIN USER ON news_author = user_id
		LEFT JOIN types ON news_type = types.type_id
		where
			types.type_id = #{type.typeId}
		order by
			news_date desc
		limit #{pageBean.beginIndex}, #{pageBean.pageSize}
	</select>
	<parameterMap type="java.util.Map" id="byType">
		<parameter property="type" javaType="Type"/>
		<parameter property="pageBean" javaType="PageBean"/>
	</parameterMap>
	
	<!-- qbc获取新闻 -->
	<select id="getNews" parameterMap="byQbc" resultMap="AllNewsResultMap">
		SELECT
			news_id,
			news_title,
			news_desc,
			news_date,
			user_nickname,
			type_name
		FROM
			news
		LEFT JOIN USER ON news_author = user_id
		LEFT JOIN types ON news_type = types.type_id
		<include refid="newsQbc"/>
		order by
			news_date desc
		limit #{pageBean.beginIndex}, #{pageBean.pageSize}
	</select>
	<parameterMap type="java.util.Map" id="byQbc">
		<parameter property="type" javaType="Type"/>
		<parameter property="keyWord" javaType="string"/>
		<parameter property="pageBean" javaType="PageBean"/>
	</parameterMap>
	<sql id="newsQbc">
		<where>
			<if test="keyWord!=null">
				and news_title like concat('%',#{keyWord},'%')
			</if>
			<if test="type!=null">
				and news_type = #{type.typeId}
			</if>
		</where>
	</sql>
	
	<!-- qbc获取新闻的条目数 -->
	<select id="getNewsRowCount" parameterMap="byConditions" resultType="int">
		SELECT
			count(news_id)
		FROM
			news
		LEFT JOIN USER ON news_author = user_id
		LEFT JOIN types ON news_type = types.type_id
		<include refid="newsQbc"/>
	</select>
	<parameterMap type="java.util.Map" id="byConditions">
		<parameter property="type" javaType="Type"/>
		<parameter property="keyWord" javaType="string"/>
	</parameterMap>
	
	<!-- 添加评论 -->
	<insert id="addComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentId">
		insert 
			comment (comment_content,comment_func_id,func_item_id,comment_user)
		 value 
		 	(#{commentContent},#{function.funcId},#{e.newsId},#{user.userId})
	</insert>
	
	<!-- 添加新闻 -->
	<insert id="addNews" parameterType="News" useGeneratedKeys="true" keyProperty="commentId">
		insert
			news (news_title,news_desc,news_author,news_date,news_type)
		value
			(#{newsTitle},#{newsDesc},#{publisher.userId},#{newsDate},#{type.typeId})
	</insert>
	
	<!-- 删除评论 -->
	<delete id="deleteComment" parameterType="Comment">
		delete from comment where comment_id = #{commentId}
	</delete>
	
	<!-- 删除新闻 -->
	<delete id="deleteNews" parameterType="News">
		delete from news where news_id = #{newsId}
	</delete>
	
</mapper>
